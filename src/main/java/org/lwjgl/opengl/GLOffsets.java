package org.lwjgl.opengl;

import kanade.kill.util.Util;

public interface GLOffsets {
    ContextCapabilities caps = GLContext.getCapabilities();
    long glPushMatrix = Util.GLAddress("glPushMatrix");
    long glClear = Util.GLAddress("glClear");
    long glBindFramebuffer = Util.GLAddress("glBindFramebuffer");
    long glViewport = Util.GLAddress("glViewport");
    long glPopMatrix = Util.GLAddress("glPopMatrix");
    long glColorMask = Util.GLAddress("glColorMask");
    long glEnable = Util.GLAddress("glEnable");
    long glDisable = Util.GLAddress("glDisable");
    long glDepthMask = Util.GLAddress("glDepthMask");
    long glMatrixMode = Util.GLAddress("glMatrixMode");
    long glLoadIdentity = Util.GLAddress("glLoadIdentity");
    long glOrtho = Util.GLAddress("glOrtho");
    long glTranslatef = Util.GLAddress("glTranslatef");
    long glColor4f = Util.GLAddress("glColor4f");
    long glGenFramebuffers = Util.GLAddress("glGenFramebuffers");
    long glGenTextures = Util.GLAddress("glGenTextures");
    long glGenRenderbuffers = Util.GLAddress("glGenRenderbuffers");
    long glBindTexture = Util.GLAddress("glBindTexture");
    long glTexParameteri = Util.GLAddress("glTexParameteri");
    long glTexImage2D = Util.GLAddress("glTexImage2D");
    long glFramebufferTexture2D = Util.GLAddress("glFramebufferTexture2D");
    long glBindRenderbuffer = Util.GLAddress("glBindRenderbuffer");
    long glRenderbufferStorage = Util.GLAddress("glRenderbufferStorage");
    long glFramebufferRenderbuffer = Util.GLAddress("glFramebufferRenderbuffer");
    long glClearColor = Util.GLAddress("glClearColor");
    long glClearDepth = Util.GLAddress("glClearDepth");
    long glVertexPointer = Util.GLAddress("glVertexPointer");
    long glEnableClientState = Util.GLAddress("glEnableClientState");
    long glNormalPointer = Util.GLAddress("glNormalPointer");
    long glColorPointer = Util.GLAddress("glColorPointer");
    long glClientActiveTexture = Util.GLAddress("glClientActiveTexture");
    long glTexCoordPointer = Util.GLAddress("glTexCoordPointer");
    long glEnableVertexAttribArray = Util.GLAddress("glEnableVertexAttribArray");
    long glVertexAttribPointer = Util.GLAddress("glVertexAttribPointer");
    long glDisableClientState = Util.GLAddress("glDisableClientState");
    long glDisableVertexAttribArray = Util.GLAddress("glDisableVertexAttribArray");
    long glDrawArrays = Util.GLAddress("glDrawArrays");
    long glBlendFuncSeparate = Util.GLAddress("glBlendFuncSeparate");
    long glShadeModel = Util.GLAddress("glShadeModel");
    long glScalef = Util.GLAddress("glScalef");
    long glTexParameterf = Util.GLAddress("glTexParameterf");
    long glTexSubImage2D = Util.GLAddress("glTexSubImage2D");
    long glBegin = Util.GLAddress("glBegin");
    long glTexCoord2f = Util.GLAddress("glTexCoord2f");
    long glVertex3f = Util.GLAddress("glVertex3f");
    long glEnd = Util.GLAddress("glEnd");
    long glBlendFunc = Util.GLAddress("glBlendFunc");
}
